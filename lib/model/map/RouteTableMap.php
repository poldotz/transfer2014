<?php



/**
 * This class defines the structure of the 'route' table.
 *
 *
 * This class was autogenerated by Propel 1.6.7 on:
 *
 * Mon May 12 21:42:30 2014
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    propel.generator.lib.model.map
 */
class RouteTableMap extends TableMap
{

    /**
     * The (dot-path) name of this class
     */
    const CLASS_NAME = 'lib.model.map.RouteTableMap';

    /**
     * Initialize the table attributes, columns and validators
     * Relations are not initialized by this method since they are lazy loaded
     *
     * @return void
     * @throws PropelException
     */
    public function initialize()
    {
        // attributes
        $this->setName('route');
        $this->setPhpName('Route');
        $this->setClassname('Route');
        $this->setPackage('lib.model');
        $this->setUseIdGenerator(true);
        // columns
        $this->addPrimaryKey('ID', 'Id', 'INTEGER', true, null, null);
        $this->addForeignKey('LOCALITY_FROM', 'LocalityFrom', 'INTEGER', 'locality', 'ID', true, null, null);
        $this->addForeignKey('LOCALITY_TO', 'LocalityTo', 'INTEGER', 'locality', 'ID', true, null, null);
        $this->addColumn('DURATION', 'Duration', 'TIME', true, null, '00:00:00');
        $this->addColumn('DISTANCE', 'Distance', 'INTEGER', true, null, 0);
        // validators
    } // initialize()

    /**
     * Build the RelationMap objects for this table relationships
     */
    public function buildRelations()
    {
        $this->addRelation('LocalityRelatedByLocalityFrom', 'Locality', RelationMap::MANY_TO_ONE, array('locality_from' => 'id', ), 'CASCADE', 'CASCADE');
        $this->addRelation('LocalityRelatedByLocalityTo', 'Locality', RelationMap::MANY_TO_ONE, array('locality_to' => 'id', ), 'CASCADE', 'CASCADE');
    } // buildRelations()

    /**
     *
     * Gets the list of behaviors registered for this table
     *
     * @return array Associative array (name => parameters) of behaviors
     */
    public function getBehaviors()
    {
        return array(
            'symfony' => array('form' => 'true', 'filter' => 'true', ),
            'symfony_behaviors' => array(),
        );
    } // getBehaviors()

} // RouteTableMap
